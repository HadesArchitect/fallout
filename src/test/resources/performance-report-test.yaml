namespace: cass-operator
nosqlbench_yaml: cql-iot.yaml
---
ensemble:
    server:
        node.count: 1
        local_files: # required for kubernetes manifests
            - url: https://raw.githubusercontent.com/datastax/fallout/master/examples/kubernetes/datastax-cass-operator-resources/ds-cass-operator-v1.yaml
              path: ds-cass-operator-v1.yaml
            - url: https://raw.githubusercontent.com/datastax/fallout/master/examples/kubernetes/datastax-cass-operator-resources/kind-default-dc.yaml
              path: kind-default-dc.yaml
            - url: https://raw.githubusercontent.com/datastax/fallout/master/examples/kubernetes/datastax-cass-operator-resources/rancher-local-path-storage.yaml
              path: rancher-local-storage.yaml
        provisioner:
            name: kind
        configuration_manager:
            - name: kubernetes_manifest
              properties:
                  manifest: <<file:rancher-local-storage.yaml>>
                  wait.strategy: FIXED_DURATION
                  wait.timeout: 5s
            - name: ds_cass_operator
              properties:
                  namespace: {{namespace}}
                  operator.manifest: <<file:ds-cass-operator-v1.yaml>>
                  datacenter.manifest: <<file:kind-default-dc.yaml>>
            - name: nosqlbench
              properties:
                replicas: 1
    client: server

workload:
    phases:
        - init_schema:
              module: nosqlbench
              properties:
                  num_clients: 1
                  args:
                      - run
                      - type=cql
                      - yaml={{nosqlbench_yaml}}
                      - tags=phase:schema
        - benchmark:
              module: nosqlbench
              properties:
                  cycles: 1000
                  args:
                      - run
                      - type=cql
                      - yaml={{nosqlbench_yaml}}
                      - tags=phase:main
                      - errors=histogram
    checkers:
        nofail:
            checker: nofail
    artifact_checkers:
        hdr:
            artifact_checker: hdrtool
