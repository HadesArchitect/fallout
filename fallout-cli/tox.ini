[tox]
envlist = py37, py27

# https://tox.readthedocs.io/en/latest/config.html
# "tox autodetects if it is running in a Jenkins context (by checking for existence of the JENKINS_URL environment variable) and will first lookup global tox settings in this section:"
#
# *-ci environments create results and flag files as follows:
#
# * build/{envname}/failed.txt indicates failure
# * build/{envname}/completed.txt indicates completion
# * build/reports/junit/*.results.xml are JUnit XML files
#
# The *-ci environments should _not_ exit on a failed test/lint command: they
# should just write a failure.txt flag. This allows us to report test
# failures to Jenkins as UNSTABLE statuses, and actual build failures (tox
# fails to get dependencies, a command unexpectedly fails) as FAILED.
[tox:jenkins]
envlist = py37-ci, py27-ci

[testenv]
skipsdist = true
setenv =
    CASS_DRIVER_NO_EXTENSIONS=1
    BUILD_DIR={toxinidir}/build/{envname}
    JUNIT_REPORTS_DIR={toxinidir}/build/reports/junit
    TOX_HELPER={toxinidir}/ci-tools/tox-helper
    ci: PYTEST_ARGS=--junit-prefix="{envname}.pytest" --junitxml={env:JUNIT_REPORTS_DIR}/{envname}.pytest.results.xml
    !ci: PYTEST_ARGS=
passenv = HOME JAVA_HOME JAVA8_HOME JAVA11_HOME
deps = -rrequirements_test.txt
commands =
    {env:TOX_HELPER} begin
    {env:TOX_HELPER} run-xml flake8
    {env:TOX_HELPER} run pytest {env:PYTEST_ARGS} {posargs}
    {env:TOX_HELPER} end

[flake8]
ignore = E402, F811, F812, F822, F823, F831, F841, N8, C9, W504
max-line-length = 120
exclude = .tox .eggs
